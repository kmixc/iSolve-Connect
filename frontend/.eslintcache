[{"/Users/jm/IdeaProjects/iSolve-Connect/frontend/src/index.js":"1","/Users/jm/IdeaProjects/iSolve-Connect/frontend/src/App.js":"2","/Users/jm/IdeaProjects/iSolve-Connect/frontend/src/components/Navbar.jsx":"3","/Users/jm/IdeaProjects/iSolve-Connect/frontend/src/components/Footer.jsx":"4","/Users/jm/IdeaProjects/iSolve-Connect/frontend/src/pages/Home.jsx":"5","/Users/jm/IdeaProjects/iSolve-Connect/frontend/src/pages/EmployeeListings.jsx":"6","/Users/jm/IdeaProjects/iSolve-Connect/frontend/src/pages/Profile.jsx":"7","/Users/jm/IdeaProjects/iSolve-Connect/frontend/src/pages/Login.jsx":"8","/Users/jm/IdeaProjects/iSolve-Connect/frontend/src/pages/About.jsx":"9","/Users/jm/IdeaProjects/iSolve-Connect/frontend/src/pages/CompanyListings.jsx":"10","/Users/jm/IdeaProjects/iSolve-Connect/frontend/src/pages/SignUp.jsx":"11","/Users/jm/IdeaProjects/iSolve-Connect/frontend/src/pages/Examples.jsx":"12","/Users/jm/IdeaProjects/iSolve-Connect/frontend/src/components/HomeHeader.jsx":"13"},{"size":196,"mtime":1648245018168,"results":"14","hashOfConfig":"15"},{"size":232,"mtime":1648245018166,"results":"16","hashOfConfig":"15"},{"size":2447,"mtime":1648245018166,"results":"17","hashOfConfig":"15"},{"size":264,"mtime":1648245018166,"results":"18","hashOfConfig":"15"},{"size":2481,"mtime":1648245018168,"results":"19","hashOfConfig":"15"},{"size":7679,"mtime":1649386199300,"results":"20","hashOfConfig":"15"},{"size":2869,"mtime":1648245018172,"results":"21","hashOfConfig":"15"},{"size":2141,"mtime":1648962492852,"results":"22","hashOfConfig":"15"},{"size":3534,"mtime":1648245018168,"results":"23","hashOfConfig":"15"},{"size":6932,"mtime":1648937180855,"results":"24","hashOfConfig":"15"},{"size":5283,"mtime":1648938970379,"results":"25","hashOfConfig":"15"},{"size":1480,"mtime":1648245018172,"results":"26","hashOfConfig":"15"},{"size":292,"mtime":1648245018166,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1r9yz86",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/jm/IdeaProjects/iSolve-Connect/frontend/src/index.js",[],["58","59"],"/Users/jm/IdeaProjects/iSolve-Connect/frontend/src/App.js",[],"/Users/jm/IdeaProjects/iSolve-Connect/frontend/src/components/Navbar.jsx",[],"/Users/jm/IdeaProjects/iSolve-Connect/frontend/src/components/Footer.jsx",[],"/Users/jm/IdeaProjects/iSolve-Connect/frontend/src/pages/Home.jsx",[],"/Users/jm/IdeaProjects/iSolve-Connect/frontend/src/pages/EmployeeListings.jsx",["60","61"],"/Users/jm/IdeaProjects/iSolve-Connect/frontend/src/pages/Profile.jsx",[],"/Users/jm/IdeaProjects/iSolve-Connect/frontend/src/pages/Login.jsx",["62"],"import React, { useState } from 'react'\nimport axios from \"axios\";\nimport Logo from '../img/logo.svg'\n\nimport {\n    BrowserRouter as Router,\n    useHistory,\n} from \"react-router-dom\";\n\n\nexport default function Login() {\n\n    const[input, setInput] = useState({\n        email: '',\n        password: ''\n    })\n\n\nfunction handleChange(event){\n    const {name, value} = event.target;\n\n    setInput(prevInput => {\n        return {\n            ...prevInput,\n            [name]:value\n        }\n    })\n}\nconst history = useHistory();\n\nfunction handleClick(event){ \n    \n    \n\n    let path = `/about`\n    \n    event.preventDefault();\n    const userCheck = {\n        email: input.email,\n        password: input.password,  \n    }\n\n\n    //calls the server.js http\n    axios.post('http://localhost:8082/userLogin', userCheck).then((response) => { localStorage.setItem('token',response.data.user)})\n    \n    console.log('pressed!')\n\n    history.push(path)\n    \n}\n    return (\n        <div className='d-flex align-items-center justify-content-center text-light my-5 login-cont'>\n            <div className='logo-form'>\n                <img className='logo' src={Logo} alt=\"iSolve Logo\" />\n                <p className='text-center text-dark'>We connect to Solve your problems.</p>\n            </div>\n            <div className='container login-form my-5 bg-iSolve p-5 m-5 rounded'>\n                <form className='form-login'>\n                    <div class=\"form-group\">\n                        <label for=\"email\">Email address</label>\n                        <input onChange={handleChange} type=\"email\" name=\"email\" value={input.email} class=\"form-control\" id=\"email\" />\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"password\">Password</label>\n                        <input onChange={handleChange} type=\"password\" name=\"password\" value={input.password}  class=\"form-control\" id=\"password\" />\n                    </div>\n\n                    <button onClick={handleClick} type=\"submit\" class=\"btn btn-primary\">Login</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n","/Users/jm/IdeaProjects/iSolve-Connect/frontend/src/pages/About.jsx",[],"/Users/jm/IdeaProjects/iSolve-Connect/frontend/src/pages/CompanyListings.jsx",[],"/Users/jm/IdeaProjects/iSolve-Connect/frontend/src/pages/SignUp.jsx",["63"],"import React, { useState } from 'react'\nimport axios from \"axios\";\n\n\nimport {\n    BrowserRouter as Router,\n    useHistory,\n} from \"react-router-dom\";\n\nexport default function SignUp() {\n\n  \n        const[input, setInput] = useState({\n            email: '',\n            password: '',\n            address: '',\n            birth: '',\n            occupation: ''\n        })\n    \n\n    function handleChange(event){\n        const {name, value} = event.target;\n\n        setInput(prevInput => {\n            return {\n                ...prevInput,\n                [name]:value\n            }\n        })\n    }\n    const history = useHistory();\n\n    function handleClick(event){ \n        \n        let path = `/login`\n        \n        event.preventDefault();\n        const newComp = {\n            email: input.email,\n            name: input.name,\n            password: input.password,\n            address: input.address,\n            occupation: input.occupation\n        }\n\n        //calls the server.js http\n        axios.post('http://localhost:8082/create', newComp)\n        console.log('pressed!')\n\n        history.push(path)\n        \n    }\n    \n    return (\n       \n        <div>\n            <div className='container p-5 mt-5 bg-iSolve text-light rounded'>\n                <form>\n\n                    <div class=\"form-group\">\n                        <label for=\"email\">Email address</label>\n                        <input  type=\"email\" onChange={handleChange} class=\"form-control\" name=\"email\" value={input.email} id=\"email\" aria-describedby=\"emailHelp\" />\n                        <small id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</small>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"name\">Name</label>\n                        <input  type=\"name\" onChange={handleChange} class=\"form-control\" name=\"name\" value={input.name} id=\"name\" aria-describedby=\"name\" />\n                        <small id=\"emailHelp\" class=\"form-text\">If you're a company, please input your companies name.</small>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"password\">Password</label>\n                        <input type=\"password\" onChange={handleChange} name=\"password\" value={input.password} class=\"form-control\" id=\"password\" />\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"adress\">Address</label>\n                        <input type=\"address\" onChange={handleChange} name=\"address\" value={input.address} class=\"form-control\" id=\"adress\" />\n                    </div>\n\n                    {/*\n                    <div class=\"form-group\">\n                        <label for=\"DOB\">Date of Birth</label>\n                        <div className='d-flex'>\n                            <select class=\"form-control mx-1\" id=\"month\">\n                                <option>Month</option>\n                                <option>January</option>\n                                <option>February</option>\n                                <option>March</option>\n                                <option>April</option>\n                                <option>May</option>\n                                <option>June</option>\n                                <option>July</option>\n                                <option>August</option>\n                                <option>September</option>\n                                <option>October</option>\n                                <option>November</option>\n                                <option>December</option>\n                            </select>\n                            <input type=\"email\" class=\"form-control mx-1\" placeholder='Day' id=\"day\" />\n                            <input type=\"email\" class=\"form-control mx-1\" placeholder='Year' id=\"year\" />\n                        </div>\n                    </div>\n                        */}\n\n                    <div class=\"form-group\">\n                        <label for=\"occupation\">Occupation</label>\n                        <div className='d-flex'>\n                            <select onChange={handleChange} name=\"occupation\" value={input.occupation} class=\"form-control mx-1\" id=\"occupation\">\n                                <option>What is your profession?</option>\n                                <option>I am Programmer</option>\n                                <option>I am Company</option>\n                            </select>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group form-check\">\n                        <p className='text-center'>By clicking Sign Up, you are indicating that you have read and acknowledge the <b>Terms of Service</b> and <b>Privacy Notice</b>.</p>\n                    </div>\n\n                    <div className='d-flex justify-content-between align-items-center'>\n                        <button onClick={handleClick}  type=\"submit\" class=\"btn btn-primary\">Sign Up</button>\n                        <a className='p-2 btn btn-secondary' href=\"/login\">Already have an account Login here.</a>\n                    </div>\n                </form>\n            </div>\n        </div>\n    \n        \n    )\n    \n}\n","/Users/jm/IdeaProjects/iSolve-Connect/frontend/src/pages/Examples.jsx",["64","65","66","67","68","69"],"import React from 'react'\nimport HomeHeader from '../components/HomeHeader'\nimport exampleTemplate from '../img/example-template.png'\n\nexport default function Examples() {\n    return (\n        <div>\n            <HomeHeader />\n            <div className='container'>\n                <div className='card-deck mb-5'>\n                    <div class=\"card\">\n                        <a href=\"#\"><img src={exampleTemplate} class=\"card-img-top\" alt=\"template\" /></a>\n                    </div>\n                    <div class=\"card\">\n                        <a href=\"#\"><img src={exampleTemplate} class=\"card-img-top\" alt=\"template\" /></a>\n                    </div>\n                    <div class=\"card\">\n                        <a href=\"#\"><img src={exampleTemplate} class=\"card-img-top\" alt=\"template\" /></a>\n                    </div>\n                </div>\n\n                <div className='card-deck'>\n                    <div class=\"card\">\n                        <a href=\"#\"><img src={exampleTemplate} class=\"card-img-top\" alt=\"template\" /></a>\n                    </div>\n                    <div class=\"card\">\n                        <a href=\"#\"><img src={exampleTemplate} class=\"card-img-top\" alt=\"template\" /></a>\n                    </div>\n                    <div class=\"card\">\n                        <a href=\"#\"><img src={exampleTemplate} class=\"card-img-top\" alt=\"template\" /></a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/Users/jm/IdeaProjects/iSolve-Connect/frontend/src/components/HomeHeader.jsx",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":9,"column":12,"nodeType":"76","messageId":"77","endLine":9,"endColumn":17},{"ruleId":"78","severity":1,"message":"79","line":44,"column":7,"nodeType":"80","endLine":44,"endColumn":9,"suggestions":"81"},{"ruleId":"74","severity":1,"message":"82","line":6,"column":22,"nodeType":"76","messageId":"77","endLine":6,"endColumn":28},{"ruleId":"74","severity":1,"message":"82","line":6,"column":22,"nodeType":"76","messageId":"77","endLine":6,"endColumn":28},{"ruleId":"83","severity":1,"message":"84","line":12,"column":25,"nodeType":"85","endLine":12,"endColumn":37},{"ruleId":"83","severity":1,"message":"84","line":15,"column":25,"nodeType":"85","endLine":15,"endColumn":37},{"ruleId":"83","severity":1,"message":"84","line":18,"column":25,"nodeType":"85","endLine":18,"endColumn":37},{"ruleId":"83","severity":1,"message":"84","line":24,"column":25,"nodeType":"85","endLine":24,"endColumn":37},{"ruleId":"83","severity":1,"message":"84","line":27,"column":25,"nodeType":"85","endLine":27,"endColumn":37},{"ruleId":"83","severity":1,"message":"84","line":30,"column":25,"nodeType":"85","endLine":30,"endColumn":37},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'count' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["88"],"'Router' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},"Update the dependencies array to be: [history]",{"range":"91","text":"92"},[1192,1194],"[history]"]